name: Build Binaries - Normal

on:
  push:
    branches:
      - main
      - master

jobs:
  build:
    name: Build Binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Build binaries
      run: |
        mkdir -p dist
        # Build the standard binary (no special build tags)
        GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o dist/wsnet_go_${{ matrix.goos }}_${{ matrix.goarch }}

        # Build the Tailscale **server** variant (tag: tailscale)
        GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -tags tailscale -o dist/wsnet_go_tailscale_${{ matrix.goos }}_${{ matrix.goarch }}

        # Build the Tailscale **client** variant (tags: tailscale tailscaleclient)
        GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -tags "tailscale tailscaleclient" -o dist/wsnet_go_tailscale_client_${{ matrix.goos }}_${{ matrix.goarch }}

    - name: Upload binaries as artifact
      uses: actions/upload-artifact@v4
      with:
        name: wsnet_go_${{ matrix.goos }}_${{ matrix.goarch }}
        path: dist/